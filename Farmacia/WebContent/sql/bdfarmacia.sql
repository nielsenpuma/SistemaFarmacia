CREATE SCHEMA IF NOT EXISTS BD_FARMACIA;
USE BD_FARMACIA;

-- ---------------- --
--      TABLAS      --
-- ---------------- --

CREATE TABLE IF NOT EXISTS TB_CLIENTE (
  COD_CLI       CHAR(5) NOT NULL,
  NOM_CLI       VARCHAR(30) NOT NULL,
  APAT_CLI      VARCHAR(30) NOT NULL,
  AMAT_CLI      VARCHAR(30) NOT NULL,
  FEC_REG_CLI   DATE NOT NULL,
  TLF_CLI       CHAR(9) NULL,
  CONSTRAINT PK_CLI PRIMARY KEY (COD_CLI));

CREATE TABLE IF NOT EXISTS TB_CARGO (
  COD_CARGO     INT NOT NULL AUTO_INCREMENT,
  DESC_CARGO    VARCHAR(50) NOT NULL,
  CONSTRAINT PK_CARGO PRIMARY KEY (COD_CARGO));

CREATE TABLE IF NOT EXISTS TB_EMPLEADO (
  COD_EMP       CHAR(5) NOT NULL,
  NOM_EMP       VARCHAR(30) NOT NULL,
  APAT_EMP      VARCHAR(30) NOT NULL,
  AMAT_EMP      VARCHAR(30) NOT NULL,
  FEC_NAC_EMP   DATE NOT NULL,
  FEC_ING_EMP   DATE NOT NULL,
  uSER_EMP      VARCHAR(45) NOT NULL,
  PASS_EMP      VARCHAR(45) NOT NULL,
  COD_CARGO     INT NOT NULL,
  CONSTRAINT PK_EMP PRIMARY KEY (COD_EMP),
  CONSTRAINT FK_EMP_CARGO FOREIGN KEY (COD_CARGO) REFERENCES TB_CARGO (COD_CARGO)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  INDEX FK_EMP_CARGO_IDX (COD_CARGO ASC));  

CREATE TABLE IF NOT EXISTS TB_LABORATORIO (
  COD_LAB       INT NOT NULL AUTO_INCREMENT,
  DESC_LAB      VARCHAR(50) NOT NULL,
  CONSTRAINT PK_LAB PRIMARY KEY (COD_LAB));

CREATE TABLE IF NOT EXISTS TB_CATEGORIA (
  COD_CAT       INT NULL,
  DESC_CAT      VARCHAR(45) NOT NULL,
  CONSTRAINT PK_CAT PRIMARY KEY (COD_CAT));

CREATE TABLE IF NOT EXISTS TB_PRODUCTO (
  COD_PRO       CHAR(5) NOT NULL,
  DESC_PRO      VARCHAR(70) NOT NULL,
  PRE_PRO       DECIMAL(10,2) NOT NULL,
  STK_ACT       INT NOT NULL,
  STK_MIN       INT NOT NULL,
  UNI_MED       VARCHAR(20) NOT NULL,
  FEC_VENC      DATE NOT NULL,
  COD_LAB       INT NOT NULL,
  COD_CAT       INT NOT NULL,
  CONSTRAINT PK_PRO PRIMARY KEY (COD_PRO),
  CONSTRAINT FK_PRO_LAB FOREIGN KEY (COD_LAB) REFERENCES TB_LABORATORIO (COD_LAB)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  CONSTRAINT FK_PRO_CAT FOREIGN KEY (COD_CAT) REFERENCES TB_CATEGORIA (COD_CAT)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  INDEX FK_PRO_LAB_IDX (COD_LAB ASC),
  INDEX FK_PRO_CAT_IDX (COD_CAT ASC));

CREATE TABLE IF NOT EXISTS TB_VENTA (
  NUM_VENTA     INT NOT NULL AUTO_INCREMENT,
  FEC_VENTA     DATE NOT NULL,
  EST_VENTA     SMALLINT NOT NULL,
  COD_CLI       CHAR(5) NOT NULL,
  COD_EMP       CHAR(5) NOT NULL,
  CONSTRAINT PK_VENTA PRIMARY KEY (NUM_VENTA),
  CONSTRAINT FK_VENTA_CLIENTE FOREIGN KEY (COD_CLI) REFERENCES TB_CLIENTE (COD_CLI)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  CONSTRAINT FK_VENTA_EMP FOREIGN KEY (COD_EMP) REFERENCES TB_EMPLEADO (COD_EMP)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  INDEX FK_VENTA_CLIENTE_IDX (COD_CLI ASC),
  INDEX FK_VENTA_EMP_IDX (COD_EMP ASC));

CREATE TABLE IF NOT EXISTS TB_DETALLE_VENTA (
  COD_VENTA     INT NOT NULL,
  COD_PRO       CHAR(5) NOT NULL,
  CANT_VENTA    INT NOT NULL,
  PREC_VEN      DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (COD_VENTA, COD_PRO),
  CONSTRAINT FK_DETVENTA_VENTA FOREIGN KEY (COD_VENTA) REFERENCES TB_VENTA (NUM_VENTA)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  CONSTRAINT FK_DETVENTA_PRO FOREIGN KEY (COD_PRO) REFERENCES TB_PRODUCTO (COD_PRO)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  INDEX FK_DETVENTA_PRO_IDX (COD_PRO ASC));

CREATE TABLE IF NOT EXISTS TB_ORDEN_COMPRA (
  COD_OCOM      CHAR(5) NOT NULL,
  FEC_OCOM      DATE NOT NULL,
  EST_OCOM      INT NOT NULL,
  COD_PRV       CHAR(5) NOT NULL,
  PRIMARY KEY (COD_OCOM),
  CONSTRAINT FK_OCOM_PRV FOREIGN KEY (COD_PRV) REFERENCES TB_PROVEEDOR (COD_PRV)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  INDEX FK_OCOM_PRV_IDX (COD_PRV ASC));

CREATE TABLE IF NOT EXISTS `BD_FARMACIA`.`TB_DETALLE_OCOMPRA` (
  COD_OCOM      CHAR(5) NOT NULL,
  COD_PRO       CHAR(5) NOT NULL,
  CANT_PED      INT NOT NULL,
  PRIMARY KEY   (COD_OCOM, COD_PRO),
  CONSTRAINT FK_DETCOMP_OCOM FOREIGN KEY (COD_OCOM) REFERENCES TB_ORDEN_COMPRA (COD_OCOM)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  CONSTRAINT FK_DETCOMP_PRO FOREIGN KEY (COD_PRO) REFERENCES TB_PRODUCTO (COD_PRO)
  ON DELETE NO ACTION
  ON UPDATE NO ACTION,
  INDEX FK_DETCOMP_PRO_IDX (COD_PRO ASC));

-- ------------------- --
--      REGISTROS      --
-- ------------------- --

INSERT INTO TB_CLIENTE VALUES ('C0001','ALICIA','BELTRAN','SUAREZ','2008/10/12','934231843'),
('C0002','EMILIO','PINO','BELTRAN','2013/01/12','984406335'),
('C0003','ESTRELLA','LAGUNA','SOL','2011/03/06','975012403'),
('C0004','LUIS','MORALES','DUARES','2012/12/09','973725910'),
('C0005','KATIA','RUIZ','VASQUES','2013/01/10','994446177'),
('C0006','JUDITH','PAREDES','ARMANDO','2013/05/07','913810322'),
('C0007','HECTOR','CHAFLOQUE','TIRADO','2012/02/10','925289034'),
('C0008','INTECH','HUAMAN','GARCIA','2011/07/01','922249493');

INSERT INTO TB_EMPLEADO VALUES ('E0001','JUANA','ALVA','SUASO','2003/07/02','2016/07/02','D08','123',1),
('E0002','JUAN','SOTO','SOTO','2002/03/10','2015/07/02','D03','123',1),
('E0003','CARLOS','AREVALO','ALVARADO','1992/10/02/','2006/07/02','D09','123',2),
('E0004','CESAR','OJEDA','RUIZ','1999/11/08','2012/07/02','D01','123',2),
('E0005','JULIO','VEGA','DENI','1997/05/11','2016/07/02','D02','123',3),
('E0006','ANA','ORTEGA','CHUMPITAZ','1994/05/11','2017/07/02','D05','123',3),
('E0007','JOSE','PALACIOS','CHORRI','1997/02/12','2013/07/02','D06','123',4),
('E0008','RUBEN','GOMEZ','MULLER','1996/08/12','2013/07/02','D04','123',4),
('E0009','PATRICIA','ARCE','BENIT','1997/05/12','2013/07/02','D07','123',3),
('E0010','RENATO','PEREZ','LLANTO','1998/08/11','2013/07/02','D08','123');

INSERT INTO TB_CARGO VALUES (1,'CAJERO'),
(2,'VENDEDOR'),
(3,'ADMINISTRADOR'),
(4,'ALMACENERO');

INSERT INTO   TB_LABORATORIO VALUES (1,'BAYER'),
(2,'BAXTER'),
(3,'ESEL'),
(4,'LILLY'),
(5,'IQFARMA'),
(6,'TECNOFARMA'),
(7,'NEXUS');

INSERT INTO TB_CATEGORIA VALUES (01,'ANALGESICOS'),
(02,'ANTINFLAMATORIOS'),
(03,'AINES'),
(04,'ANTIBIOTICOS'),
(05,'AMOXICILNA'),
(06,'CEFALOSPORINAS'),
(07,'ERITROMICINA'),
(08,'QUINOLONA'),
(09,'AMPICILINA'),
(10,'VANCOMICINA'),
(11,'AZITROMICINA'),
(12,'PENICILINAS');

INSERT INTO TB_PRODUCTO VALUES ('P0001','ASGESIC 10MG',2,80,10,'MILIGRAMO','18/05/21',1,1),
('P0002','ASGESIC 20MG',3.5,95,10,'MILIGRAMO','18/05/21',2,2),
('P0003','ASGESIC 30MG',5,74,10,'MILIGRAMO','18/05/21',3,2),
('P0004','ASGESIC 60MG',8.5,65,10,'MILIGRAMO','18/05/21',4,3),
('P0005','DOLALGIAL',3,76,10,'MILIGRAMO','18/05/21',5,5),
('P0006','NACLODIL',5,43,10,'MILIGRAMO','18/05/21',6,3),
('P0007','DOLOSTOP 20MG',600,54,10,'MILIGRAMO','18/05/21',7,5),
('P0008','ASPIRINA',1,99,10,'MILIGRAMO','18/05/21',1,7),
('P0009','CAFIASPIRINA',1,65,10,'MILIGRAMO','18/05/21',2,4),
('P0010','DOLPIRET CMP',2,54,10,'MILIGRAMO','18/05/21',3,6),
('P0011','DOLPIRET SSP',3,64,10,'MILIGRAMO','18/05/21',4,6),
('P0012','DONTOFLAMON CMP',2.5,13,10,'MILIGRAMO','18/05/21',5,8),
('P0013','DONTOFLAMON SSP',3.5,65,10,'MILIGRAMO','18/05/21',6,9),
('P0014','IBUFLAMAR',6.5,75,10,'MILIGRAMO','18/05/21',7,9),
('P0015','PIREDOL',5,48,10,'MILIGRAMO','18/05/21',1,9),
('P0016','FLAMADIN',3,46,2,'MILIGRAMO','18/05/21',2,9),
('P0017','DIPROFEN CMP',6,84,10,'MILIGRAMO','18/05/21',3,6),
('P0018','DIPROFEN SSP',7.5,46,10,'MILIGRAMO','18/05/21',4,6),
('P0019','IBUPRONAL FORTE',10,64,10,'MILIGRAMO','18/05/21',5,3),
('P0020','CEFLEX 200MG',4.5,76,10,'MILIGRAMO','18/05/21',6,9);

-- ------------------------------------ --
--      PROCEDIMIENTOS ALMACENADOS      --
-- ------------------------------------ --

-- ------------------- --
--      CATEGORIA      --
-- ------------------- --

DROP PROCEDURE IF EXISTS LISTARCATEGORIA;
DELIMITER @@
CREATE PROCEDURE LISTARCATEGORIA()
BEGIN
SELECT * FROM TB_CATEGORIA;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS BUSCARCATEGORIA;
DELIMITER @@
CREATE PROCEDURE BUSCARCATEGORIA(XCOD INT)
BEGIN
SELECT * FROM TB_CATEGORIA WHERE COD_CAT=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS INSERTARCATEGORIA;
DELIMITER @@
CREATE PROCEDURE INSERTARCATEGORIA(XCOD INT,XDESC VARCHAR(45))
BEGIN
INSERT TB_CATEGORIA VALUES(XCOD,XDESC);
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS MODIFICARCATEGORIA;
DELIMITER @@
CREATE PROCEDURE MODIFICARCATEGORIA(XCOD INT ,XDESCR VARCHAR(45))
BEGIN
UPDATE TB_CATEGORIA SET DESC_CAT=XDESCR WHERE COD_CAT=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS ELIMINARCATEGORIA;
DELIMITER @@
CREATE PROCEDURE ELIMINARCATEGORIA(XCOD INT)
BEGIN
DELETE FROM TB_CATEGORIA WHERE COD_CAT=XCOD;
END @@
DELIMITER;

-- --------------- --
--      CARGO      --
-- --------------- --

DROP PROCEDURE IF EXISTS LISTARCARGO;
DELIMITER @@
CREATE PROCEDURE LISTARCARGO()
BEGIN
SELECT * FROM TB_CARGO;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS BUSCARCARGO;
DELIMITER @@
CREATE PROCEDURE BUSCARCARGO(XCOD INT)
BEGIN
SELECT * FROM TB_CARGO WHERE COD_CARGO=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS INSERTARCARGO;
DELIMITER @@
CREATE PROCEDURE INSERTARCARGO(XCOD INT,XDESC VARCHAR(50))
BEGIN
INSERT TB_CARGO VALUES(XCOD,XDESC);
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS MODIFICARCARGO;
DELIMITER @@
CREATE PROCEDURE MODIFICARCARGO(XCOD INT ,XDESCR VARCHAR(45))
BEGIN
UPDATE TB_CARGO SET DESC_CARGO=XDESCR WHERE COD_CARGO=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS ELIMINARCARGO;
DELIMITER @@
CREATE PROCEDURE ELIMINARCARGO(XCOD INT)
BEGIN
DELETE FROM TB_CARGO WHERE COD_CARGO=XCOD;
END @@
DELIMITER;

-- --------------------- --
--      LABORATORIO      --
-- --------------------- --

DROP PROCEDURE IF EXISTS LISTARLABORATORIO;
DELIMITER @@
CREATE PROCEDURE LISTARLABORATORIO()
BEGIN
SELECT * FROM TB_LABORATORIO;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS BUSCARLABORATORIO;
DELIMITER @@
CREATE PROCEDURE BUSCARLABORATORIO(XCOD INT)
BEGIN
SELECT * FROM TB_LABORATORIO WHERE COD_LAB=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS INSERTARLABORATORIO;
DELIMITER @@
CREATE PROCEDURE INSERTARLABORATORIO(XCOD INT,XDESC VARCHAR(50))
BEGIN
INSERT TB_LABORATORIO VALUES(XCOD,XDESC);
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS MODIFICARLABORATORIO;
DELIMITER @@
CREATE PROCEDURE MODIFICARLABORATORIO(XCOD INT ,XDESCR VARCHAR(50))
BEGIN
UPDATE TB_LABORATORIO SET DESC_LAB=XDESCR WHERE COD_LAB=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS ELIMINARLABORATORIO;
DELIMITER @@
CREATE PROCEDURE ELIMINARLABORATORIO(XCOD INT)
BEGIN
DELETE FROM TB_LABORATORIO WHERE COD_LAB=XCOD;
END @@
DELIMITER;

-- ------------------ --
--      PRODUCTO      --
-- ------------------ --

DROP PROCEDURE IF EXISTS LISTARDESCPRO;
DELIMITER @@
CREATE PROCEDURE LISTARDESCPRO()
BEGIN
SELECT P.DESC_PRO FROM TB_PRODUCTO P;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS LISTARPRODUCTO;
DELIMITER @@
CREATE PROCEDURE LISTARPRODUCTO()
BEGIN
SELECT P.COD_PRO,P.DESC_PRO,P.PRE_PRO,P.STK_ACT,P.STK_MIN,P.UNI_MED,P.FEC_VENC,L.DESC_LAB,C.DESC_CAT 
FROM TB_PRODUCTO P INNER JOIN TB_CATEGORIA C
ON P.COD_CAT=C.COD_CAT INNER JOIN TB_LABORATORIO L
ON P.COD_LAB=L.COD_LAB;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS BUSCARPRODUCTO;
DELIMITER @@
CREATE PROCEDURE BUSCARPRODUCTO(XDES VARCHAR(50))
BEGIN
SELECT P.COD_PRO,P.DESC_PRO,P.PRE_PRO,P.STK_ACT,P.STK_MIN,P.UNI_MED,P.FEC_VENC,P.COD_LAB,P.COD_CAT
FROM TB_PRODUCTO P 
WHERE P.DESC_PRO=XDES;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS INSERTARPRODUCTO;
DELIMITER @@
CREATE PROCEDURE INSERTARPRODUCTO(XCOD CHAR(5),XDESC VARCHAR(70), PRECIO DECIMAL (10,2),
  STOKACT INT, STOKMIN INT, UNIMED VARCHAR(20), FECHA DATE, CODLAB INT,CODCAT INT)
BEGIN
INSERT TB_PRODUCTO VALUES(XCOD,XDESC,PRECIO,STOKACT,STOKMIN,UNIMED,FECHA,CODLAB,CODCAT);
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS MODIFICARPRODUCTO;
DELIMITER @@
CREATE PROCEDURE MODIFICARPRODUCTO(XCOD CHAR(5),XDESC VARCHAR(70), PRECIO DECIMAL (10,2),
  STOKACT INT, STOKMIN INT, UNIMED VARCHAR(20), FECHA DATE, CODLAB INT,CODCAT INT)
BEGIN
UPDATE TB_PRODUCTO SET DESC_PRO=XDESC,PRE_PRO=PRECIO,STK_ACT=STOKACT,STK_MIN=STOKMIN,
UNI_MED=UNIMED,FEC_VENC=FECHA,COD_LAB=CODLAB,COD_CAT=CODCAT
WHERE COD_PRO=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS ELIMINARPRODUCTO;
DELIMITER @@
CREATE PROCEDURE ELIMINARPRODUCTO(XCOD CHAR(5))
BEGIN
DELETE FROM TB_PRODUCTO WHERE COD_PRO=XCOD;
END @@
DELIMITER;

-- ------------------ --
--      EMPLEADO      --
-- ------------------ --

DROP PROCEDURE IF EXISTS LISTAREMPLEADO;
DELIMITER @@
CREATE PROCEDURE LISTAREMPLEADO()
BEGIN
SELECT * FROM TB_EMPLEADO;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS BUSCAREMPLEADO;
DELIMITER @@
CREATE PROCEDURE BUSCAREMPLEADO(XCOD CHAR(5))
BEGIN
SELECT * FROM TB_EMPLEADO WHERE COD_EMP=XCOD;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS INSERTAREMPLEADO;
DELIMITER @@
CREATE PROCEDURE INSERTAREMPLEADO(XCODEMP CHAR(5),NOMEMP VARCHAR(30), APEPATER VARCHAR(30),
  APEMATER VARCHAR(30), FECNAC DATE, FECINGR DATE, USEREMP VARCHAR(45), PASS VARCHAR(45),CODCARGO INT)
BEGIN
INSERT TB_EMPLEADO VALUES(XCODEMP,NOMEMP,APEPATER,APEMATER,FECNAC,FECINGR,USEREMP,PASS,CODCARGO);
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS MODIFICAREMPLEADO;
DELIMITER @@
CREATE PROCEDURE MODIFICAREMPLEADO(XCODEMP CHAR(5),NOMEMP VARCHAR(30), APEPATER VARCHAR(30),
  APEMATER VARCHAR(30), FECNAC DATE, FECINGR DATE, USEREMP VARCHAR(45), PASS VARCHAR(45),CODCARGO INT)
BEGIN
UPDATE TB_EMPLEADO SET NOM_EMP=NOMEMP, APAT_EMP=APEPATER,AMAT_EMP=APEMATER, FEC_NAC_EMP=FECNAC,
FEC_ING_EMP=FECINGR,USER_EMP=USEREMP,PASS_EMP=PASS,COD_CARGO=CODCARGO
WHERE COD_EMP=XCODEMP;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS ELIMINAREMPLEADO;
DELIMITER @@
CREATE PROCEDURE ELIMINAREMPLEADO(XCODEMP CHAR(5))
BEGIN
DELETE FROM TB_EMPLEADO WHERE COD_EMP=XCODEMP;
END @@
DELIMITER;

-- ----------------- --
--      CLIENTE      --
-- ----------------- --

DROP PROCEDURE IF EXISTS LISTARCLIENTE;
DELIMITER @@
CREATE PROCEDURE LISTARCLIENTE()
BEGIN
SELECT * FROM TB_CLIENTE;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS BUSCARCLIENTE;
DELIMITER @@
CREATE PROCEDURE BUSCARCLIENTE(XCODCLI CHAR(5))
BEGIN
SELECT * FROM TB_CLIENTE WHERE COD_CLI=XCODCLI;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS INSERTARCLIENTE;
DELIMITER @@
CREATE PROCEDURE INSERTARCLIENTE(XCODCLI CHAR(5),NOMCLI VARCHAR(30), APEPATER VARCHAR(30),
  APEMATER VARCHAR(30),FECREGCLI DATE, TLF VARCHAR(9))
BEGIN
INSERT TB_CLIENTE VALUES(XCODCLI,NOMCLI,APEPATER,APEMATER,FECREGCLI,TLF);
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS MODIFICARCLIENTE;
DELIMITER @@
CREATE PROCEDURE MODIFICARCLIENTE(XCODCLI CHAR(5),NOMCLI VARCHAR(30), APEPATER VARCHAR(30),
  APEMATER VARCHAR(30),FECREGCLI DATE, TLF VARCHAR(9))
BEGIN
UPDATE TB_CLIENTE SET NOM_CLI=NOMCLI,APAT_CLI=APEPATER,AMAT_CLI=APEMATER,FEC_REG_CLI=FECREGCLI,TLF_CLIENTE=TLF
WHERE COD_CLI=XCODCLI;
END @@
DELIMITER;

DROP PROCEDURE IF EXISTS ELIMINARCLIENTE;
DELIMITER @@
CREATE PROCEDURE ELIMINARCLIENTE(XCODCLI CHAR(5))
BEGIN
DELETE FROM TB_CLIENTE WHERE COD_CLI=XCODCLI;
END @@
DELIMITER;